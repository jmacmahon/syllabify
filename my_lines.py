"""
Bar chart demo with pairs of bars grouped for easy comparison.
"""
import numpy as np
import matplotlib.pyplot as plt
import matplotlib
matplotlib.rc('font', family='DejaVu Sans')

consonantRatios = {
    "carroll_lear": [('p', 0.05325381332968725, 0.18341285333697943),('b', 0.11447788159469105, 0.24107767396086452),('t', 0.04428721471392806, 0.16312019269347938),('d', 0.030150818452308957, 0.142812144510654),('k', 0.061646637173040954, 0.18353854801214423),('g', 0.027713651989603065, 0.13154560726965617),('f', 0.0773637520255223, 0.205969581307811),('v', -0.012558746854849642, 0.053299487595590375),('θ', -0.017349768532419284, 0.0395719907546415),('ð', -0.008674884266209642, 0.01978599537732075),('s', 0.08969089929645127, 0.23623502662947463),('z', 0.01020573720472922, 0.09720167020267817),('ʃ', -0.0016094048489222502, 0.053461256700774104),('ʒ', 0.0, 0.0),('ʧ', -0.005247592204047642, 0.0682105551670106),('ʤ', 0.004288511893502038, 0.08830408069909057),('m', 0.0820646034612143, 0.264231692835082),('n', 0.04026043236598519, 0.16159141948586667),('l', 0.10707087974381058, 0.2270031943302635),('r', 0.030362207642519845, 0.13074890346859128),('w', 0.007635485709231039, 0.0831052550315097),('j', -0.005082696103183209, 0.01693454795503506),('h', -0.007505114511427319, 0.024171781178093987),('ŋ', 0.00811930307399713, 0.08447328951859548),('ɫ̩', 0.05763395853553755, 0.16347715257557355)],
    "dahl_rowling": [('p', 0.08856428474900363, 0.21609521345888166),('b', 0.06184847061793491, 0.1639579809949683),('t', 0.03853870095917557, 0.1252605821949463),('d', 0.054633755279239284, 0.16042000816162094),('k', 0.11858186411765931, 0.26743964125868475),('g', 0.0664997469781871, 0.18081208097880214),('f', 0.02880227641269667, 0.10739844043318145),('v', -0.006190934459773064, 0.03128054019454009),('θ', -0.006190934459773064, 0.03128054019454009),('ð', 0.0, 0.0),('s', 0.07668104682449617, 0.18675981339055758),('z', 0.02261155449205248, 0.12613396522120915),('ʃ', -0.00540311769151252, 0.06095867324706807), ('ʒ', 0.0, 0.0),('ʧ', -0.0037263535785967694, 0.0324001887040448),('ʤ', -0.0031173606534479377, 0.04612811334161998),('m', 0.05859597848112275, 0.1750957777912787),('n', 0.05441824575026101, 0.1721050517407784),('l', 0.13712099225982016, 0.25248474250720493),('r', 0.052842895708113694, 0.17726463117360675),('w', 0.04573423315493905, 0.1388535804651326),('j', -0.0049224081486124935, 0.016391942198791705),('h', -0.0052474816335517545, 0.03929766084502129),('ŋ', 0.01906890794963733, 0.09383431785681429),('ɫ̩', 0.04411956233745652, 0.12971556311057214)],
    "elicited": [('p', 0.06474916379483453, 0.1844889314432607),('b', 0.08320614671128718, 0.2097938532887128),('t', 0.03438750600679557, 0.15199344637415682),('d', 0.023731126561563155, 0.0989355401051035),('k', 0.06552490562072365, 0.18333223723641923),('g', 0.06088008519591603, 0.18111991480408396),('f', 0.05376867339074722, 0.16123132660925277),('v', -0.004793588574250345, 0.01646025524091701),('θ', -0.012216033591077775, 0.04221603359107777),('ð',0.0,0.0),('s', 0.06619028406309893, 0.17680971593690106),('z', 0.0066714637759786935, 0.08332853622402131),('ʃ', 0.006064199311160756, 0.08979294354598209),('ʒ', -0.00699591717953154, 0.023662583846198206),('ʧ', -0.009171965993081246, 0.054171965993081245),('ʤ', -0.003997952731054712, 0.06566461939772138),('m', 0.04252949570962056, 0.1451371709570461),('n', 0.060153119240959674, 0.18418021409237367),('l', 0.14476907344688233, 0.29342140274359385),('r', 0.07425710820079431, 0.196076225132539),('w', 0.0008569743611269234, 0.050809692305539736),('j', -0.002937396567960963, 0.023604063234627624),('h', -0.007814588985811253, 0.01781458898581125),('ŋ', 0.033537990822399597, 0.13946200917760043),('ɫ̩', 0.06260212050004507, 0.1580645461666216)],
    "gullivers": [('p', 0.02820825768335422, 0.15697692750183095),('b', 0.05911140886565252, 0.18230273254848886),('t', 0.05641341053903499, 0.172542818417194),('d', 0.09875089894215625, 0.23289893270767545),('k', 0.08230566712532139, 0.2022061173864631),('g', 0.10444665172720272, 0.2564961092155582),('f', 0.02665691162139877, 0.1602117752472881),('v', -0.005261909245981574, 0.011995915979988309),('θ', -0.008110047036721373, 0.02831206723874158),('ð', 0.0, 0.0),('s', 0.07287829196669697, 0.2038893848009798),('z', -0.008540145991708336, 0.05904519649675884),('ʃ', -0.008887572446495035, 0.05602561958454218),('ʒ', 0.0, 0.0),('ʧ', -0.007065049551696144, 0.02390006638671298),('ʤ', 0.0, 0.0),('m', 0.06575719375361141, 0.1749835469871293),('n', 0.13075966836369451, 0.2732807356767095),('l', 0.33897707352985273, 0.4990700645172853),('r', 0.11436617190111371, 0.2711557136207718),('w', -0.008887572446495035, 0.05602561958454218),('j', -0.004630345634918916, 0.01540475640932969),('h', -0.0014252600566716511, 0.08560034423175583),('ŋ', -0.0060936692987150695, 0.0633327265377723),('ɫ̩', 0.0, 0.0)],
    "hitchhikers": [('p', 0.02996166817951948, 0.1291292409113896),('b', 0.025452620585305154, 0.11217364204095748),('t', 0.12350477230646119, 0.2590709852692964),('d', 0.04100546431347417, 0.1395500912420814),('k', 0.09062028569846878, 0.214177694099511),('g', 0.09532423300551357, 0.23346364578236523),('f', 0.02313729260171099, 0.11070109123667285),('v', 0.019176549027901883, 0.10456082470947184),('θ', -0.0024567631837892154, 0.031497167224193254), ('ð', 0.0, 0.0),('s', 0.10232487378859287, 0.2441397726760536),('z', 0.013088126765104437, 0.0866593479823703),('ʃ', -0.0052450782824708456, 0.043123866161258725),('ʒ', 0.0, 0.0),('ʧ', -0.006036625036821779, 0.04012753412773087),('ʤ', 0.011191255500858296, 0.0835057141961114),('m', 0.020248631268509037, 0.09692308590320814),('n', 0.08536546837899281, 0.19417998616646173),('l', 0.17066469096528084, 0.30585046054987064),('r', 0.1308719238552386, 0.26938060139728665),('w', 0.020889814119263973, 0.10411018588073603),('j', 0.0006717429425059512, 0.03973229746153445),('h', 0.010746801956347807, 0.08521279400324815),('ŋ', 0.008170854855352891, 0.09031399362949559),('ɫ̩', 0.01520230130169098, 0.08201992092053124)],
    "real": [('p', 0.09219336273857728, 0.1117097121789904),('b', 0.05167269728809361, 0.06743626674840665),('t', 0.19997264832168896, 0.2260146225931182),('d', 0.09723486576817934, 0.11728856034944966),('k', 0.13358764991075137, 0.15597603385583095),('g', 0.026963397512568224, 0.03878309432088013),('f', 0.051998819399831156, 0.06749355081717673),('v', 0.033755518828863386, 0.044720058197438274),('θ', 0.011482496326838957, 0.020432234138616143),('ð', 0.004852263543484407, 0.010790708621226889),('s', 0.17140499279011373, 0.19682597109302408),('z', 0.02393070258361259, 0.0345310718201908),('ʃ', 0.03408708891278438, 0.045477361666158955),('ʒ', 0.0012931136447446835, 0.0037831841851763354),('ʧ', 0.01674045086429955, 0.02705220307328193),('ʤ', 0.019172283918189367, 0.02890685111746741),('m', 0.07966089929815329, 0.09719670364640617),('n', 0.17480165556830426, 0.1977387937837393),('l', 0.14387520853678165, 0.16626205087584012),('r', 0.12516060767614676, 0.14589989381913734),('w', 0.028768708160612166, 0.04135628225423332),('j', 0.017127281452241766, 0.025630175797969112),('h', 0.018589029890461618, 0.029030017728586),('ŋ', 0.021738725210964836, 0.03180011383512058),('ɫ̩', 0.0064579814298576284, 0.011209375367933953)]
}

def do_plotting(real, other, xlabel='NO X-LABEL', ylabel='NO Y-LABEL', title='NO TITLE'):
    assert len(real) == len(other), 'Different data lengths, title = %s' % title
    points = range(len(real))

    def get_mean_error(datapoint):
        mean = (datapoint[1] + datapoint[2])/2.0
        error = datapoint[2] - mean
        return (datapoint[0], mean, error)
    real_data_errors = map(get_mean_error, real)
    real_ticks, real_data, real_errors = zip(*real_data_errors)

    other_data_errors = map(get_mean_error, other)
    other_ticks, other_mean, other_errors = zip(*other_data_errors)

    assert real_ticks == other_ticks, 'Inconsistent data keys'

    """plt.errorbar(points,
                 real_data,
                 yerr=real_errors,
                 capsize=1,
                 fmt='k')
    plt.errorbar(points,
                 other_data,
                 yerr=other_errors,
                 capsize=1,
                 fmt='r')"""

    _, real_lower, real_upper = zip(*real)
    _, other_lower, other_upper = zip(*other)

    plt.fill_between(points, real_lower, real_upper, facecolor=[(0,0,0,0.2)], edgecolor=[(0,0,0,1.0)])
    plt.fill_between(points, other_lower, other_upper, facecolor=[(1,0,0,0.2)], edgecolor=[(1,0,0,1.0)])

    plt.plot(points, real_lower,
             'k+', markersize=5.0)
    plt.plot(points, real_upper,
             'k+', markersize=5.0)
    plt.plot(points, other_lower,
             'r+', markersize=5.0)
    plt.plot(points, other_upper,
             'r+', markersize=5.0)
    plt.plot(points, other_mean,
             'r+', markersize=5.0)

    plt.xticks(points, real_ticks)
    plt.xlabel(xlabel)
    plt.ylabel(ylabel)
    plt.title(title)

    plt.show()

def test():
    def plot_consonantratios(otherkey, othername):
        do_plotting(consonantRatios['real'],
                    consonantRatios[otherkey],
                    'Consonant',
                    'Consonant density by syll. number',
                    'Real words (black) vs. %s (red)' % othername)
    plots = [('elicited', 'Elicited neologisms'),
             ('carroll_lear', 'neologisms from Carroll/Lear'),
             ('hitchhikers', 'neologisms from The Hitchhiker\'s Guide to the Galaxy'),
             ('dahl_rowling', 'neologisms from Dahl/Rowling'),
             ('gullivers', 'neologisms from Gulliver\'s Travels')]
    for (key, name) in plots:
        plot_consonantratios(key, name)
